{"version":3,"sources":["Component/WriteContainers.js","Component/Gnb.js","Component/Home.js","Action/Type.js","Action/User_Action.js","Component/Login.js","Component/Signup.js","Component/WriteForm.js","Hoc/Auth.js","Component/Route.js","Component/GlobalStyled.js","App.js","Reducer/index.js","Reducer/User_Reducer.js","index.js"],"names":["TextBox","styled","div","TextTitle","Text","WriteContainers","Nav","Logo","LogoutBtn","button","Gnb","props","onClick","axios","get","then","res","data","history","push","alert","WriteContainer","Home","USER_LOGIN","USER_SIGNUP","USER_AUTH","authUser","request","type","payload","LoginOutsideContaier","LoginIntoContainer","LoginTitle","h1","LoginBox","LoginComponent","form","Input","input","SignupBtn","Link","LoginBtnBox","Login","dispatch","useDispatch","useState","email","setEmail","password","setPassword","onChange","e","target","id","value","onSubmit","preventDefault","userSubmit","post","loginUser","console","log","autoComplete","placeholder","to","SignupTitle","SignupBtnBox","LoginpBtn","Signup","name","setName","confirmPassword","setConfirmPassword","signupUser","createUser","WriteFormContainer","Form","FormTitle","TitleInput","TextInput","textarea","WriteFormBtn","Cancel","Insert","WriteForm","currentTitle","setCurrentTitle","currentText","setCurrentText","maxLength","Specific","option","admin","AuthenticationCheck","useEffect","isAuth","isAdmin","path","exact","component","Auth","from","GlobalStyle","createGlobalStyle","reset","App","Route","GlobalStyled","rootReducer","combineReducers","user","state","action","userData","createStoreWithMiddleware","applyMiddleware","ReduxPromise","ReduxThunk","createStore","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.37264342.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TextBox = styled.div`\r\n  width: 1280px;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\r\n  margin: auto;\r\n  line-height: 2rem;\r\n`;\r\n\r\nconst TextTitle = styled.div`\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  margin: 3rem 0;\r\n`;\r\nconst Text = styled.div`\r\n  font-size: 1.2rem;\r\n  margin: 4rem 0;\r\n`;\r\n\r\nconst WriteContainers = () => {\r\n  return (\r\n    <>\r\n      <TextBox>\r\n        <TextTitle>테스트 포스트 </TextTitle>\r\n        <Text>\r\n          Lorem Ipsum is simply dummy text of the printing and typesetting\r\n          industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n          since the 1500s, when an unknown printer took a galley of type and\r\n          scrambled it to make a type specimen book. It has survived not only\r\n          five centuries, but also the leap into electronic typesetting,\r\n          remaining essentially unchanged. It was popularised in the 1960s with\r\n          the release of Letraset sheets containing Lorem Ipsum passages, and\r\n          more recently with desktop publishing software like Aldus PageMaker\r\n          including versions of Lorem Ipsum.\r\n        </Text>\r\n      </TextBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WriteContainers;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst Nav = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding: 2rem 0;\r\n  align-items: center;\r\n  box-shadow: 4px 5px 3px rgba(200, 200, 200, 0.5);\r\n`;\r\nconst Logo = styled.div`\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin: 0 10rem;\r\n`;\r\n\r\nconst LogoutBtn = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  font-weight: bold;\r\n  background-color: #934c47;\r\n  padding: 0.3rem 0.7rem;\r\n  color: white;\r\n  margin: 0 10rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Gnb = (props) => {\r\n  const onClick = () => {\r\n    axios.get('/api/user/logout').then((res) => {\r\n      if (res.data) {\r\n        props.history.push('/Login');\r\n      } else {\r\n        alert('로그아웃 실패 입니다.');\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <Logo>M Y N O T E 📕</Logo>\r\n        <LogoutBtn onClick={onClick}>로그아웃</LogoutBtn>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Gnb;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport WriteContainers from './WriteContainers';\r\nimport Gnb from './Gnb';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst WriteContainer = styled.div`\r\n  margin-top: 7rem;\r\n`;\r\n// const WriteBtn = styled(Link)`\r\n//   position: absolute;\r\n//   bottom: 10%;\r\n//   right: 10%;\r\n//   text-decoration: none;\r\n//   color: black;\r\n//   font-weight: bold;\r\n// `;\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <>\r\n      <Gnb {...props} />\r\n      <WriteContainer>\r\n        <WriteContainers />\r\n      </WriteContainer>\r\n      {/* <WriteBtn to='/WriteForm'>글쓰기</WriteBtn> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const USER_LOGIN = 'user_login';\r\nexport const USER_SIGNUP = 'user_signup';\r\nexport const USER_AUTH = 'user_auth';\r\n","import { USER_LOGIN, USER_SIGNUP, USER_AUTH } from './Type';\r\nimport axios from 'axios';\r\n\r\nexport function loginUser(userSubmit) {\r\n  const request = axios\r\n    .post('/api/user/login', userSubmit)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: USER_LOGIN,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function signupUser(userSubmit) {\r\n  const request = axios\r\n    .post('/api/user/signup', userSubmit)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: USER_SIGNUP,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function authUser() {\r\n  const request = axios.get('/api/user/auth').then((res) => res.data);\r\n\r\n  return {\r\n    type: USER_AUTH,\r\n    payload: request,\r\n  };\r\n}\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginUser } from '../Action/User_Action';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginOutsideContaier = styled.div`\r\n  background-color: #e9ecef;\r\n  padding-top: 10rem;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst LoginIntoContainer = styled.div`\r\n  background-color: white;\r\n  width: 35%;\r\n  height: 60%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst LoginTitle = styled.h1`\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 2rem;\r\n  padding-top: 4rem;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nconst LoginBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst LoginComponent = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  outline: none;\r\n  border-top: none;\r\n  border-left: none;\r\n  border-right: none;\r\n  width: 18rem;\r\n  margin: 1rem 0%;\r\n  padding: 0.4rem 0;\r\n`;\r\n\r\nconst SignupBtn = styled(Link)`\r\n  text-decoration: none;\r\n  color: black;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n  text-align: right;\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst LoginBtnBox = styled.button`\r\n  background-color: #11a8c7;\r\n  padding: 1rem;\r\n  text-align: center;\r\n  color: white;\r\n  font-size: 0.9rem;\r\n  font-weight: bold;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Login = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onChange = (e) => {\r\n    if (e.target.id === 'email') {\r\n      setEmail(e.target.value);\r\n    }\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let body = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    dispatch(loginUser(body)).then((res) => {\r\n      if (res.payload.loginUser) {\r\n        props.history.push('/Home');\r\n      } else {\r\n        console.log(res.payload);\r\n        alert('로그인에 실패 하셨습니다.');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoginOutsideContaier>\r\n        <LoginIntoContainer>\r\n          <LoginTitle>로그인</LoginTitle>\r\n          <LoginBox>\r\n            <LoginComponent onSubmit={onSubmit}>\r\n              <Input\r\n                type='email'\r\n                id='email'\r\n                onChange={onChange}\r\n                autoComplete='current-email'\r\n                placeholder='Email'\r\n              />\r\n              <Input\r\n                type='password'\r\n                id='password'\r\n                onChange={onChange}\r\n                autoComplete='current-password'\r\n                placeholder='Password'\r\n              />\r\n              <br />\r\n              <LoginBtnBox>Login</LoginBtnBox>\r\n              <SignupBtn to='/Signup'>회원가입</SignupBtn>\r\n            </LoginComponent>\r\n          </LoginBox>\r\n        </LoginIntoContainer>\r\n      </LoginOutsideContaier>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signupUser } from '../Action/User_Action';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginOutsideContaier = styled.div`\r\n  background-color: #e9ecef;\r\n  padding-top: 10rem;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst LoginIntoContainer = styled.div`\r\n  background-color: white;\r\n  width: 35%;\r\n  height: 60%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst SignupTitle = styled.h1`\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 2rem;\r\n  padding-top: 3rem;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  outline: none;\r\n  border-top: none;\r\n  border-left: none;\r\n  border-right: none;\r\n  width: 18rem;\r\n  margin: 0.7rem 0%;\r\n  padding: 0.4rem 0;\r\n`;\r\n\r\nconst LoginBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst LoginComponent = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst SignupBtnBox = styled.button`\r\n  background-color: #11a8c7;\r\n  padding: 1rem;\r\n  text-align: center;\r\n  color: white;\r\n  font-size: 0.9rem;\r\n  font-weight: bold;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst LoginpBtn = styled(Link)`\r\n  text-decoration: none;\r\n  color: black;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n  text-align: right;\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst Signup = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const onChange = (e) => {\r\n    if (e.target.id === 'email') {\r\n      setEmail(e.target.value);\r\n    } else if (e.target.id === 'name') {\r\n      setName(e.target.value);\r\n    } else if (e.target.id === 'password') {\r\n      setPassword(e.target.value);\r\n    }\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      return alert('비밀번호가 일치하지 않습니다.');\r\n    }\r\n\r\n    let body = {\r\n      email,\r\n      password,\r\n      name,\r\n    };\r\n\r\n    dispatch(signupUser(body)).then((res) => {\r\n      if (res.payload.createUser) {\r\n        props.history.push('/');\r\n      } else {\r\n        alert('회원가입에 실패 하셨습니다.');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoginOutsideContaier>\r\n        <LoginIntoContainer>\r\n          <SignupTitle>회원가입</SignupTitle>\r\n          <LoginBox>\r\n            <LoginComponent onSubmit={onSubmit}>\r\n              <Input\r\n                type='email'\r\n                id='email'\r\n                onChange={onChange}\r\n                autoComplete='current-email'\r\n                placeholder='Email'\r\n              />\r\n              <Input\r\n                type='text'\r\n                id='name'\r\n                onChange={onChange}\r\n                autoComplete='current-name'\r\n                placeholder='Name'\r\n              />\r\n\r\n              <Input\r\n                type='password'\r\n                id='password'\r\n                onChange={onChange}\r\n                autoComplete='current-password'\r\n                placeholder='Password'\r\n              />\r\n\r\n              <Input\r\n                type='password'\r\n                id='confirmpassword'\r\n                onChange={onChange}\r\n                autoComplete='current-password'\r\n                placeholder='Confirmpassword'\r\n              />\r\n              <br />\r\n              <SignupBtnBox type='submit'>SignUp</SignupBtnBox>\r\n              <LoginpBtn to='/Login'>뒤로가기</LoginpBtn>\r\n            </LoginComponent>\r\n          </LoginBox>\r\n        </LoginIntoContainer>\r\n      </LoginOutsideContaier>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from 'react';\r\nimport Gnb from './Gnb';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nconst WriteFormContainer = styled.div`\r\n  margin-top: 4rem;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst FormTitle = styled.h1`\r\n  font-size: 2rem;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  margin: 1.2rem 0;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  border-top: none;\r\n  border-left: none;\r\n  border-right: none;\r\n  outline: none;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\r\n  margin: 2rem;\r\n  width: 1000px;\r\n  height: 30px;\r\n  font-size: 1.3rem;\r\n\r\n  &::-webkit-input-placeholder {\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n\r\nconst TextInput = styled.textarea`\r\n  margin: 2rem;\r\n  width: 1000px;\r\n  height: 300px;\r\n  resize: none;\r\n  border: none;\r\n  font-size: 0.9rem;\r\n\r\n  &::-webkit-input-placeholder {\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst WriteFormBtn = styled.div``;\r\nconst Cancel = styled(Link)``;\r\nconst Insert = styled.button``;\r\n\r\nconst WriteForm = (props) => {\r\n  const [currentTitle, setCurrentTitle] = useState('');\r\n  const [currentText, setCurrentText] = useState('');\r\n\r\n  const onChange = (e) => {\r\n    if (e.target.id === 'Title') {\r\n      setCurrentTitle(e.target.value);\r\n    } else {\r\n      setCurrentText(e.target.value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let body = [currentTitle, currentText];\r\n    setCurrentTitle('');\r\n    setCurrentText('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Gnb {...props} />\r\n      <WriteFormContainer>\r\n        <Form onSubmit={onSubmit}>\r\n          <FormTitle>게시글 작성</FormTitle>\r\n          <TitleInput\r\n            placeholder='제목을 입력해 주세요'\r\n            onChange={onChange}\r\n            id='Title'\r\n            value={currentTitle}\r\n          />\r\n          <TextInput\r\n            name='story'\r\n            maxLength='500'\r\n            placeholder='내용을 입력해   주세요'\r\n            onChange={onChange}\r\n            id='Text'\r\n            value={currentText}\r\n          />\r\n          <Insert type='submit'>포스트등록</Insert>\r\n        </Form>\r\n      </WriteFormContainer>\r\n      <WriteFormBtn>\r\n        <Cancel to='/Home'>취소</Cancel>\r\n      </WriteFormBtn>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WriteForm;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authUser } from '../Action/User_Action';\r\n\r\nexport default function (Specific, option, admin = null) {\r\n  function AuthenticationCheck(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      dispatch(authUser()).then((res) => {\r\n        if (!res.payload.isAuth) {\r\n          if (option) {\r\n            //비로그인 주제에 로그인 권한에 접근\r\n            props.history.push('/');\r\n            alert('로그인 유저만 접근 가능합니다.');\r\n          }\r\n        } else {\r\n          if (admin && !res.payload.isAdmin) {\r\n            //로그인 했는데 관리자 아닌데 관리자 권한에 접근한경우 홈으로 돌려보내기\r\n            props.history.push('/');\r\n          } else {\r\n            if (option === false) {\r\n              //로그인 했는데 비로그인 권한에 접근하는경우 홈으로 꼬우면 로그아웃눌러라\r\n\r\n              props.history.push('/');\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }, []);\r\n    return <Specific {...props} />;\r\n  }\r\n  return AuthenticationCheck;\r\n}\r\n","import {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\nimport WriteForm from './WriteForm';\r\nimport Auth from '../Hoc/Auth';\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Switch>\r\n        <Route path='/Home' exact component={Auth(Home, true)} />\r\n        <Route path='/Signup' component={Auth(Signup, null)} />\r\n        <Route path='/WriteForm' component={Auth(WriteForm, true)} />\r\n        <Route path='/' component={Auth(Login, false)} />\r\n        <Redirect from='*' to='/' />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n${reset}\r\n\r\n*{\r\n    margin:0px;\r\n    \r\n}\r\n\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\nimport Route from './Component/Route';\nimport GlobalStyled from './Component/GlobalStyled';\nconst App = () => {\n  return (\n    <>\n      <Route />\n      <GlobalStyled />\n    </>\n  );\n};\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport user from './User_Reducer';\r\nconst rootReducer = combineReducers({\r\n  user,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { USER_LOGIN, USER_SIGNUP, USER_AUTH } from '../Action/Type';\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case USER_LOGIN: {\r\n      return { ...state, loginUser: action.payload };\r\n    }\r\n\r\n    case USER_SIGNUP: {\r\n      return { ...state, createUser: action.payload };\r\n    }\r\n    case USER_AUTH: {\r\n      return { ...state, userData: action.payload };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport ReduxPromise from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './Reducer/index';\n\nconst createStoreWithMiddleware = applyMiddleware(\n  ReduxPromise,\n  ReduxThunk\n)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(rootReducer)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}